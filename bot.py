import telebot
from telebot import types
import os
import subprocess
from flask import Flask, request

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
BOT_TOKEN = "7359754732:AAGdpBIOTLFoqzyj4z4zyTyfQRAA22a0w_4"
CHANNEL_USERNAME = "@Franglon"
CHANNEL_INVITE_LINK = "https://t.me/Franglon"

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ ===
def is_subscribed(user_id):
    try:
        chat_member = bot.get_chat_member(CHANNEL_USERNAME, user_id)
        return chat_member.status in ["member", "administrator", "creator"]
    except Exception:
        return False

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    if is_subscribed(user_id):
        bot.send_message(message.chat.id, "‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ, –∏ —è —É–¥–∞–ª—é –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫ üé¨")
    else:
        markup = types.InlineKeyboardMarkup()
        subscribe = types.InlineKeyboardButton("üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", url=CHANNEL_INVITE_LINK)
        check = types.InlineKeyboardButton("‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_sub")
        markup.add(subscribe)
        markup.add(check)
        bot.send_message(message.chat.id, "‚ùóÔ∏è–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª:", reply_markup=markup)

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ –∫–Ω–æ–ø–∫–µ ===
@bot.callback_query_handler(func=lambda call: call.data == "check_sub")
def callback_check(call):
    user_id = call.from_user.id
    if is_subscribed(user_id):
        bot.send_message(call.message.chat.id, "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ üéû")
    else:
        bot.answer_callback_query(call.id, "‚ùå –¢—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω!")

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ ===
@bot.message_handler(content_types=['video'])
def handle_video(message):
    user_id = message.from_user.id
    if not is_subscribed(user_id):
        bot.send_message(message.chat.id, "‚ö†Ô∏è –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
        return

    file_info = bot.get_file(message.video.file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    input_path = f"input_{user_id}.mp4"
    output_path = f"output_{user_id}.mp4"

    with open(input_path, "wb") as new_file:
        new_file.write(downloaded_file)

    bot.send_message(message.chat.id, "üé¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ...")

    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º ffmpeg –¥–ª—è –ø–µ—Ä–µ–∫–æ–¥–∏—Ä–æ–≤–∫–∏ (–±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑ moviepy)
        cmd = [
            "ffmpeg", "-i", input_path,
            "-vf", "scale=trunc(iw/2)*2:trunc(ih/2)*2",  # –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ
            "-c:v", "libx264", "-preset", "ultrafast",
            "-c:a", "aac",
            output_path
        ]
        subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

        with open(output_path, "rb") as video:
            bot.send_video(message.chat.id, video)
        bot.send_message(message.chat.id, "‚úÖ –ì–æ—Ç–æ–≤–æ! –í–∏–¥–µ–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ.")
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}")
    finally:
        if os.path.exists(input_path):
            os.remove(input_path)
        if os.path.exists(output_path):
            os.remove(output_path)

# === Flask (Render Webhook) ===
@app.route('/' + BOT_TOKEN, methods=['POST'])
def webhook_update():
    json_str = request.get_data().decode('UTF-8')
    update = telebot.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "OK", 200

@app.route('/')
def index():
    bot.remove_webhook()
    bot.set_webhook(url='https://video-bot-bbi9.onrender.com/' + BOT_TOKEN)
    return "Webhook set!", 200

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
