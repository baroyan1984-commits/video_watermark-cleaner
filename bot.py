import telebot
from telebot import types
import os
import requests
from moviepy.editor import VideoFileClip
from flask import Flask

# –¢–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = os.getenv("BOT_TOKEN", "7359754732:AAGdpBIOTLFoqzyj4z4zyTyfQRAA22a0w_4")

bot = telebot.TeleBot(BOT_TOKEN)
app = Flask(__name__)

# üîó –ù–æ–≤–∞—è –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª
CHANNEL_INVITE_LINK = "https://t.me/Franglon"
CHANNEL_USERNAME = "@Franglon"

@app.route('/')
def home():
    return "‚úÖ Bot is running!"

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton("üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=CHANNEL_INVITE_LINK)
    markup.add(btn)
    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç!\n–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª üëá",
        reply_markup=markup
    )

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
def is_subscribed(user_id):
    try:
        member = bot.get_chat_member(chat_id=CHANNEL_USERNAME, user_id=user_id)
        return member.status in ['member', 'administrator', 'creator']
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        return False

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
@bot.message_handler(content_types=['video'])
def handle_video(message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    if not is_subscribed(user_id):
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=CHANNEL_INVITE_LINK)
        markup.add(btn)
        bot.reply_to(message, "–ß—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª üëá", reply_markup=markup)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∏–¥–µ–æ
    file_info = bot.get_file(message.video.file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    input_path = "input_video.mp4"
    output_path = "output_video.mp4"

    with open(input_path, 'wb') as new_file:
        new_file.write(downloaded_file)

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–µ–æ
    try:
        clip = VideoFileClip(input_path)
        clip = clip.subclip(0, clip.duration)
        clip.write_videofile(output_path, codec="libx264", audio_codec="aac")
        clip.close()

        with open(output_path, 'rb') as video:
            bot.send_video(message.chat.id, video)

    except Exception as e:
        bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ: {e}")

    finally:
        if os.path.exists(input_path):
            os.remove(input_path)
        if os.path.exists(output_path):
            os.remove(output_path)

# Flask —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
if __name__ == "__main__":
    from threading import Thread
    Thread(target=lambda: bot.polling(non_stop=True)).start()
    app.run(host="0.0.0.0", port=10000)
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∏–¥–µ–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        file_info = bot.get_file(message.video.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        temp_input = tempfile.NamedTemporaryFile(delete=False, suffix=".mp4")
        temp_input.write(downloaded_file)
        temp_input.close()
        input_path = temp_input.name
        output_path = tempfile.mktemp(suffix=".mp4")

        # üîÑ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        def update_progress(percent, text):
            total_blocks = 10
            filled_blocks = int(percent / 10)
            bar = "‚ñÆ" * filled_blocks + "‚ñØ" * (total_blocks - filled_blocks)
            bot.edit_message_text(
                f"{text}\n\n{bar} {percent}%",
                chat_id=msg.chat.id,
                message_id=msg.message_id
            )

        update_progress(10, "üì• –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ...")
        time.sleep(1)
        update_progress(40, "üéû –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–∞–¥—Ä—ã...")
        time.sleep(1)

        clip = mp.VideoFileClip(input_path)
        processed_clip = clip.subclip(0, min(clip.duration, 10))  # –æ–≥—Ä–∞–Ω–∏—á–∏–º 10 —Å–µ–∫
        update_progress(70, "‚öôÔ∏è –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–∞—á–µ—Å—Ç–≤–∞...")
        time.sleep(1)

        processed_clip.write_videofile(output_path, codec="libx264", audio_codec="aac", verbose=False, logger=None)
        update_progress(100, "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ
        with open(output_path, "rb") as video:
            bot.send_video(
                message.chat.id,
                video,
                caption="üéâ –ì–æ—Ç–æ–≤–æ! –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @KinoMania ‚Äî —Ç–∞–º —Å–∞–º—ã–µ –∫—Ä—É—Ç—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã üé¨"
            )

        clip.close()
        processed_clip.close()
        os.remove(input_path)
        os.remove(output_path)

    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")


# üîπ –û—Ç–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
@bot.message_handler(func=lambda m: True)
def default_response(message):
    bot.send_message(message.chat.id, "üìπ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ, –∏ —è –æ–±—Ä–∞–±–æ—Ç–∞—é –µ–≥–æ ‚ú®")


if __name__ == "__main__":
    print("ü§ñ Bot is running...")
    bot.infinity_polling(skip_pending=True)
