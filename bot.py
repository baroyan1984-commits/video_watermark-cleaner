import os
import telebot
from telebot import types
import tempfile
import moviepy.editor as mp
import time
import requests

# üîπ –¢–æ–∫–µ–Ω –∏–∑ Render Environment
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_USERNAME = os.getenv("CHANNEL_USERNAME")  # –ø—Ä–∏–º–µ—Ä: @KinoMania

bot = telebot.TeleBot(BOT_TOKEN)


# üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
def check_subscription(user_id):
    try:
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/getChatMember?chat_id={CHANNEL_USERNAME}&user_id={user_id}"
        r = requests.get(url)
        r.raise_for_status()
        data = r.json()
        status = data.get("result", {}).get("status")
        return status in ["member", "administrator", "creator"]
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏]: {e}")
        return False


# üîπ –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.InlineKeyboardMarkup()
    btn_sub = types.InlineKeyboardButton("üì∫ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ KinoMania", url=f"https://t.me/{CHANNEL_USERNAME[1:]}")
    markup.add(btn_sub)

    bot.send_message(
        message.chat.id,
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç **KinoMania** üé¨\n\n"
        "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤–∏–¥–µ–æ, –∏ —è –ø–æ–º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –µ–≥–æ.\n"
        "‚ö†Ô∏è –ü–µ—Ä–µ–¥ —ç—Ç–∏–º —É–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.",
        reply_markup=markup
    )


# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
@bot.message_handler(content_types=['video'])
def handle_video(message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    if not check_subscription(user_id):
        markup = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton("üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL_USERNAME[1:]}")
        markup.add(btn)
        bot.reply_to(
            message,
            "‚ùå –ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª KinoMania!",
            reply_markup=markup
        )
        return

    msg = bot.reply_to(message, "üé¨ –í–∏–¥–µ–æ –ø–æ–ª—É—á–µ–Ω–æ! –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É...")

    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∏–¥–µ–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        file_info = bot.get_file(message.video.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        temp_input = tempfile.NamedTemporaryFile(delete=False, suffix=".mp4")
        temp_input.write(downloaded_file)
        temp_input.close()
        input_path = temp_input.name
        output_path = tempfile.mktemp(suffix=".mp4")

        # üîÑ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        def update_progress(percent, text):
            total_blocks = 10
            filled_blocks = int(percent / 10)
            bar = "‚ñÆ" * filled_blocks + "‚ñØ" * (total_blocks - filled_blocks)
            bot.edit_message_text(
                f"{text}\n\n{bar} {percent}%",
                chat_id=msg.chat.id,
                message_id=msg.message_id
            )

        update_progress(10, "üì• –ó–∞–≥—Ä—É–∂–∞—é –≤–∏–¥–µ–æ...")
        time.sleep(1)
        update_progress(40, "üéû –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∫–∞–¥—Ä—ã...")
        time.sleep(1)

        clip = mp.VideoFileClip(input_path)
        processed_clip = clip.subclip(0, min(clip.duration, 10))  # –æ–≥—Ä–∞–Ω–∏—á–∏–º 10 —Å–µ–∫
        update_progress(70, "‚öôÔ∏è –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–∞—á–µ—Å—Ç–≤–∞...")
        time.sleep(1)

        processed_clip.write_videofile(output_path, codec="libx264", audio_codec="aac", verbose=False, logger=None)
        update_progress(100, "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ
        with open(output_path, "rb") as video:
            bot.send_video(
                message.chat.id,
                video,
                caption="üéâ –ì–æ—Ç–æ–≤–æ! –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª @KinoMania ‚Äî —Ç–∞–º —Å–∞–º—ã–µ –∫—Ä—É—Ç—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã üé¨"
            )

        clip.close()
        processed_clip.close()
        os.remove(input_path)
        os.remove(output_path)

    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {e}")


# üîπ –û—Ç–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
@bot.message_handler(func=lambda m: True)
def default_response(message):
    bot.send_message(message.chat.id, "üìπ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ, –∏ —è –æ–±—Ä–∞–±–æ—Ç–∞—é –µ–≥–æ ‚ú®")


if __name__ == "__main__":
    print("ü§ñ Bot is running...")
    bot.infinity_polling(skip_pending=True)
