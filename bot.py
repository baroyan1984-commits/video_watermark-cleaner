import telebot
import requests
from moviepy.editor import VideoFileClip
import os
from flask import Flask
import threading

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
BOT_TOKEN = "7359754732:AAGdpBIOTLFoqzyj4z4zyTyfQRAA22a0w_4"
CHANNEL_INVITE_LINK = "https://t.me/Franglon"  # –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª

bot = telebot.TeleBot(BOT_TOKEN)

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ ---
def is_subscribed(user_id):
    try:
        chat_member = bot.get_chat_member("@Franglon", user_id)
        return chat_member.status in ["member", "administrator", "creator"]
    except Exception:
        return False

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start ---
@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = message.from_user.id
    if is_subscribed(user_id):
        bot.reply_to(message, "‚úÖ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û—Ç–ø—Ä–∞–≤—å –≤–∏–¥–µ–æ, —á—Ç–æ–±—ã —è –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª üé¨")
    else:
        markup = telebot.types.InlineKeyboardMarkup()
        subscribe_btn = telebot.types.InlineKeyboardButton("üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=CHANNEL_INVITE_LINK)
        check_btn = telebot.types.InlineKeyboardButton("‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_sub")
        markup.add(subscribe_btn)
        markup.add(check_btn)
        bot.send_message(message.chat.id, "‚ùóÔ∏è–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:", reply_markup=markup)

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ ---
@bot.callback_query_handler(func=lambda call: call.data == "check_sub")
def callback_check(call):
    user_id = call.from_user.id
    if is_subscribed(user_id):
        bot.send_message(call.message.chat.id, "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ üé¨")
    else:
        bot.answer_callback_query(call.id, "‚ùå –¢—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω!")

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ ---
@bot.message_handler(content_types=['video'])
def handle_video(message):
    user_id = message.from_user.id
    if not is_subscribed(user_id):
        bot.send_message(message.chat.id, "‚ùóÔ∏è–°–Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
        return

    file_info = bot.get_file(message.video.file_id)
    downloaded_file = bot.download_file(file_info.file_path)

    input_path = f"video_{user_id}.mp4"
    output_path = f"output_{user_id}.mp4"

    with open(input_path, 'wb') as new_file:
        new_file.write(downloaded_file)

    bot.reply_to(message, "üéû –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...")

    try:
        clip = VideoFileClip(input_path)
        clip.write_videofile(output_path)
        with open(output_path, 'rb') as video:
            bot.send_video(message.chat.id, video)
    except Exception as e:
        bot.reply_to(message, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∏–¥–µ–æ: {e}")
    finally:
        if os.path.exists(input_path):
            os.remove(input_path)
        if os.path.exists(output_path):
            os.remove(output_path)

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
def start_bot():
    bot.infinity_polling()

# --- Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Render (–Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ –±–æ—Ç–∞) ---
app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is alive!"

def run_flask():
    app.run(host="0.0.0.0", port=10000)

# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == "__main__":
    threading.Thread(target=run_flask).start()
    start_bot()
