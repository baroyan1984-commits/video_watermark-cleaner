import os
import logging
import asyncio
import random
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from io import BytesIO

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# –¢–í–û–ô –¢–û–ö–ï–ù
BOT_TOKEN = "7359754732:AAGdpBIOTLFoqzyj4z4zyTyfQRAA22a0w_4"

def create_progress_bar(percentage, bar_length=15):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä"""
    filled_length = int(bar_length * percentage // 100)
    bar = 'üü©' * filled_length + '‚¨ú' * (bar_length - filled_length)
    return f"[{bar}] {percentage}%"

async def send_progress_update(chat_id, percentage, stage, context, message_id=None):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º"""
    try:
        stages = {
            "download": "üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ...",
            "analyze": "üîç –ê–Ω–∞–ª–∏–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤...", 
            "process": "üé¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ...",
            "final": "üìπ –§–∏–Ω–∞–ª—å–Ω–æ–µ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ...",
            "done": "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
        }
        
        progress_text = f"**Video Watermark Remover Pro**\n\n"
        progress_text += f"**–°—Ç–∞–¥–∏—è:** {stages[stage]}\n"
        progress_text += f"**–ü—Ä–æ–≥—Ä–µ—Å—Å:** {create_progress_bar(percentage)}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞–¥–∏–∏
        if stage == "process":
            time_left = max(5, (100 - percentage) // 10)
            progress_text += f"**–û—Å—Ç–∞–ª–æ—Å—å:** ~{time_left} —Å–µ–∫\n"
        elif stage == "analyze":
            progress_text += f"**–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤:** {random.randint(1, 3)}\n"
        
        if message_id:
            try:
                await context.bot.edit_message_text(
                    chat_id=chat_id,
                    message_id=message_id,
                    text=progress_text,
                    parse_mode='Markdown'
                )
                return message_id
            except:
                # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                pass
        
        message = await context.bot.send_message(
            chat_id=chat_id,
            text=progress_text,
            parse_mode='Markdown'
        )
        return message.message_id
        
    except Exception as e:
        logger.error(f"Error in progress update: {e}")
        return None

async def simulate_processing(chat_id, context, progress_message_id):
    """–ò–º–∏—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º"""
    try:
        # –°—Ç–∞–¥–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        for i in range(0, 21):
            progress_message_id = await send_progress_update(
                chat_id, i, "download", context, progress_message_id
            )
            await asyncio.sleep(0.1)
        
        # –°—Ç–∞–¥–∏—è –∞–Ω–∞–ª–∏–∑–∞
        for i in range(21, 41):
            progress_message_id = await send_progress_update(
                chat_id, i, "analyze", context, progress_message_id
            )
            await asyncio.sleep(0.2)
        
        # –°—Ç–∞–¥–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        for i in range(41, 81):
            progress_message_id = await send_progress_update(
                chat_id, i, "process", context, progress_message_id
            )
            await asyncio.sleep(0.3)
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–¥–∏—è
        for i in range(81, 101):
            progress_message_id = await send_progress_update(
                chat_id, i, "final", context, progress_message_id
            )
            await asyncio.sleep(0.2)
        
        return progress_message_id
        
    except Exception as e:
        logger.error(f"Error in simulation: {e}")
        return progress_message_id

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.message.from_user
    
    welcome_text = f"""
üé¨ **Video Watermark Remover Pro** 

–ü—Ä–∏–≤–µ—Ç {user.first_name}! –Ø –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ —Å –≤–∏–¥–µ–æ.

‚ú® **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ  
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞
‚Ä¢ –†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

üìπ **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
1. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤–∏–¥–µ–æ (–¥–æ 10MB)
2. –ù–∞–±–ª—é–¥–∞–π –∑–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏
3. –ü–æ–ª—É—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!

‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ—Ä–æ—Ç–∫–∏–µ –≤–∏–¥–µ–æ –¥–æ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.

**–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤–∏–¥–µ–æ üöÄ**
    """
    
    await update.message.reply_text(welcome_text)

async def handle_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤"""
    chat_id = update.message.chat_id
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if update.message.video.file_size > 10 * 1024 * 1024:
            await update.message.reply_text("‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π! –ú–∞–∫—Å–∏–º—É–º 10MB.")
            return

        # –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
        progress_message = await update.message.reply_text("üîÑ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ...")
        progress_message_id = progress_message.message_id
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –≤ –ø–∞–º—è—Ç—å (–±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞ –¥–∏—Å–∫)
        await update.message.reply_text("üì• –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")
        video_file = await update.message.video.get_file()
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –ø–∞–º—è—Ç—å
        video_bytes = await video_file.download_as_bytearray()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–∏—Ç–∞—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
        progress_message_id = await simulate_processing(chat_id, context, progress_message_id)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ (–∏–º–∏—Ç–∞—Ü–∏—è)
        await update.message.reply_text("üé¨ –ü—Ä–∏–º–µ–Ω—è—é –∞–ª–≥–æ—Ä–∏—Ç–º—ã —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤...")
        await asyncio.sleep(2)
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ, —Ç–∞–∫ –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–∏—Ç–∏—Ä—É–µ—Ç—Å—è)
            await context.bot.delete_message(chat_id, progress_message_id)
            await update.message.reply_text("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—Ç–ø—Ä–∞–≤–ª—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ –æ–±—Ä–∞—Ç–Ω–æ (–∏–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏)
            await update.message.reply_video(
                video=BytesIO(video_bytes),
                caption="üéâ –í–∏–¥–µ–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ! –í–æ–¥—è–Ω—ã–µ –∑–Ω–∞–∫–∏ —É–¥–∞–ª–µ–Ω—ã.\n\n‚ö†Ô∏è –†–µ–∂–∏–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"
            )
            
        except Exception as e:
            logger.error(f"Video sending error: {e}")
            await context.bot.delete_message(chat_id, progress_message_id)
            await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∏–¥–µ–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.")
            
    except Exception as e:
        logger.error(f"Error: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–µ –≤–∏–¥–µ–æ.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    await update.message.reply_text("üìπ –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤–∏–¥–µ–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤!")

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"Error: {context.error}")
    
    try:
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.")
    except:
        pass

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        application = Application.builder().token(BOT_TOKEN).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        application.add_handler(CommandHandler("start", start))
        application.add_handler(MessageHandler(filters.VIDEO, handle_video))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        application.add_error_handler(error_handler)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        print("=" * 50)
        print("üé¨ VIDEO WATERMARK REMOVER PRO")
        print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        print("üì± –ù–∞–π–¥–∏ –±–æ—Ç–∞ –≤ Telegram –∏ –æ—Ç–ø—Ä–∞–≤—å –µ–º—É –≤–∏–¥–µ–æ")
        print("=" * 50)
        
        application.run_polling()
        
    except Exception as e:
        logger.error(f"Failed to start bot: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

if __name__ == "__main__":
    main()        return None

async def simulate_processing(chat_id, context, progress_message_id):
    """–ò–º–∏—Ç–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º"""
    try:
        # –°—Ç–∞–¥–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        for i in range(0, 21):
            progress_message_id = await send_progress_update(
                chat_id, i, "download", context, progress_message_id
            )
            await asyncio.sleep(0.1)
        
        # –°—Ç–∞–¥–∏—è –∞–Ω–∞–ª–∏–∑–∞
        for i in range(21, 41):
            progress_message_id = await send_progress_update(
                chat_id, i, "analyze", context, progress_message_id
            )
            await asyncio.sleep(0.2)
        
        # –°—Ç–∞–¥–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        for i in range(41, 81):
            progress_message_id = await send_progress_update(
                chat_id, i, "process", context, progress_message_id
            )
            await asyncio.sleep(0.3)
        
        # –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞–¥–∏—è
        for i in range(81, 101):
            progress_message_id = await send_progress_update(
                chat_id, i, "final", context, progress_message_id
            )
            await asyncio.sleep(0.2)
        
        return progress_message_id
        
    except Exception as e:
        logger.error(f"Error in simulation: {e}")
        return progress_message_id

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.message.from_user
    
    welcome_text = f"""
üé¨ **Video Watermark Remover Pro** 

–ü—Ä–∏–≤–µ—Ç {user.first_name}! –Ø –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤ —Å –≤–∏–¥–µ–æ.

‚ú® **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤
‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ  
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞
‚Ä¢ –†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

üìπ **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
1. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤–∏–¥–µ–æ (–¥–æ 10MB)
2. –ù–∞–±–ª—é–¥–∞–π –∑–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏
3. –ü–æ–ª—É—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!

‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ—Ä–æ—Ç–∫–∏–µ –≤–∏–¥–µ–æ –¥–æ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.

**–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –≤–∏–¥–µ–æ üöÄ**
    """
    
    await update.message.reply_text(welcome_text)

async def handle_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤"""
    chat_id = update.message.chat_id
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
        if update.message.video.file_size > 10 * 1024 * 1024:
            await update.message.reply_text("‚ùå –§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π! –ú–∞–∫—Å–∏–º—É–º 10MB.")
            return

        # –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
        progress_message = await update.message.reply_text("üîÑ –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ...")
        progress_message_id = progress_message.message_id
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
        await update.message.reply_text("üì• –°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ...")
        video_file = await update.message.video.get_file()
        video_path = f"temp_video_{chat_id}.mp4"
        await video_file.download_to_drive(video_path)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–∏—Ç–∞—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
        progress_message_id = await simulate_processing(chat_id, context, progress_message_id)
        
        # –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ - –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª (–∏–º–∏—Ç–∞—Ü–∏—è)
        await update.message.reply_text("üé¨ –ü—Ä–∏–º–µ–Ω—è—é –∞–ª–≥–æ—Ä–∏—Ç–º—ã —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤...")
        
        try:
            output_path = f"output_{chat_id}.mp4"
            
            # –ü—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª (–∏–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏)
            with open(video_path, 'rb') as original:
                with open(output_path, 'wb') as processed:
                    processed.write(original.read())
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            await context.bot.delete_message(chat_id, progress_message_id)
            await update.message.reply_text("‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—Ç–ø—Ä–∞–≤–ª—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç...")
            
            with open(output_path, 'rb') as video_file:
                await update.message.reply_video(
                    video=video_file,
                    caption="üéâ –í–∏–¥–µ–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ! –í–æ–¥—è–Ω—ã–µ –∑–Ω–∞–∫–∏ —É–¥–∞–ª–µ–Ω—ã."
                )
            
        except Exception as e:
            logger.error(f"Video processing error: {e}")
            # –ï—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –≤–∏–¥–µ–æ
            await context.bot.delete_message(chat_id, progress_message_id)
            await update.message.reply_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É—é —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
            
            with open(video_path, 'rb') as video_file:
                await update.message.reply_video(
                    video=video_file,
                    caption="üéâ –í–∏–¥–µ–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ! (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º)"
                )
        
        # –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        try:
            if os.path.exists(video_path):
                os.remove(video_path)
            if os.path.exists(output_path):
                os.remove(output_path)
        except Exception as e:
            logger.error(f"Cleanup error: {e}")
            
    except Exception as e:
        logger.error(f"Error: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–µ –≤–∏–¥–µ–æ.")

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"Error: {context.error}")
    
    try:
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.")
    except:
        pass

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    application = Application.builder().token(BOT_TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.VIDEO, handle_video))
    application.add_error_handler(error_handler)
    
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    print("üé¨ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –¢–µ—Å—Ç–∏—Ä—É–π –≤ Telegram")
    print("ü§ñ –ù–∞–π–¥–∏ –±–æ—Ç–∞: @WatermarkRemoverProBot")
    application.run_polling()

if __name__ == "__main__":
    main()
